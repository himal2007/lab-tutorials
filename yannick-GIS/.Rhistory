knitr::opts_chunk$set(echo = TRUE)
setwd(getwd())
library(raster)
library(sf)
library(exactextractr)
library(geodata)
library(ggplot2)
library(RColorBrewer)
library(ggspatial)
output_dir <- getwd()
country_boundary <- gadm("CMR", level = 0, path = output_dir)
country_boundary_sf <- country_boundary %>% st_as_sf()
country_boundary_3 <- gadm("CMR", level = 3, path = output_dir)
country_boundary_3_sf <- country_boundary_3 %>% st_as_sf()
library(raster)
library(sf)
library(exactextractr)
library(geodata)
library(ggplot2)
library(RColorBrewer)
library(ggspatial)
output_dir <- getwd()
country_boundary <- gadm("CMR", level = 0, path = output_dir)
country_boundary_sf <- country_boundary %>% st_as_sf()
country_boundary_3 <- gadm("CMR", level = 3, path = output_dir)
country_boundary_3_sf <- country_boundary_3 %>% st_as_sf()
epi_map <- raster("data/day_temp_cameroon_2010_12_1km.tif") # dummy data as example, need to input prevalence map here
pop_count <- raster("data/Pop_count_cameroon_2010_12_1km.tif")
rur_urb_data <- raster("data/2024-01-26_rural_urban_Cameroon_2010_1km.tif")
par(mfrow = c(2, 2))
plot(epi_map, main = "Epi Map")
plot(pop_count, main = "Population Data")
plot(rur_urb_data, main = "Rural-Urban Data")
plot(country_boundary, main = "Country Boundary")
par(mfrow = c(1, 1))
# Reclassify the rural-urban data raster (rur_urb_data) into a new raster (rururb_nourban).
# In the new raster, values less than 1 and values 20 or greater are set to NA (representing negative (invalid) areas and urban areas, respectively),
# and all other values are set to 1 (representing rural and non-urban areas).
rururb_nourban <- reclassify(rur_urb_data, c(-Inf, 1, NA,
1, 10, 1,
10, 20, 1,
20, Inf, NA))
plot(rururb_nourban)
pop_count_rururb_nourban <- pop_count * rururb_nourban
## number of cases - assuming epimap is prevalence in percent
n_cases <- pop_count_rururb_nourban * epi_map
cases <- exactextractr::exact_extract(n_cases, country_boundary_3_sf, fun = "sum")
admin_boundaries_sf$cases <- cases/1000
cases <- exactextractr::exact_extract(n_cases, country_boundary_3_sf, fun = "sum")
country_boundary_3_sf$cases <- cases/1000
mypalette <- colorRampPalette((brewer.pal(9, "Reds")))
agg_cases <- ggplot()+
geom_sf(data = country_boundary_3_sf, aes(fill = cases), col = "black", lwd = .3) +
geom_sf(data = country_boundary_sf, col = "black", lwd = .8, alpha = 0) +
scale_fill_gradientn(colours = mypalette(100)) +
labs(fill = "Estimated aggregated cases (x1000)") +
theme_void() +
theme(legend.position = "bottom", legend.key.size = unit(2, 'cm'), #change legend key size
legend.key.height = unit(.5, 'cm'), #change legend key height
legend.key.width = unit(1.5, 'cm')) +
guides(fill = guide_colourbar(title.position="top", title.hjust = 0.5)) +  annotation_scale(location = "br", width_hint = 0.5)  +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.15, "in"), pad_y = unit(0.25, "in"),
style = north_arrow_fancy_orienteering)
agg_cases
